if (rootProject.ext.switchModule.isModuleFramework) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}

android {
    dataBinding {
        enabled = true
    }

    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        if (!rootProject.ext.switchModule.isModuleFramework) {
            applicationId rootProject.ext.android.application + ".module_framework"
        }
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner rootProject.ext.android.testInstrumentationRunner
        //提供给ARouter路由生成中间类
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }
    sourceSets {
        main {
            if (rootProject.ext.switchModule.isModuleFramework) {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    //排除java/application文件夹下的所有文件
                    exclude '*application'
                }
            } else {
                manifest.srcFile 'src/main/application/AndroidManifest.xml'
            }
        }
    }

    resourcePrefix "module_framework_"

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {
    implementation project(':lib_base')
    implementation project(':module_widget')
    annotationProcessor rootProject.ext.common_dependencies.arouterCompiler
}
